7/16/2015

Ideas:

We can do a combination of ideas of today's conversation, we can add a function that call "Quick Match", which allows the user to do something like
the urban daddy function, but once scheduled, he/she can only do another schedule after the date is passed.

So here is the plan:

1. For new users, we ask them basic informations:
  (i)   Name
  (ii)  Age Range
  (iii) University Education
  (iv)  Location
  (v)   Major
  (vi)  Gender
  (v)   Heights
  
Then preference: 
  (i) Sports Events / Music Events
  (ii) Beer / Wine
  (iii) Gaming / Playing Sports
  (iv) EDC / piano concerts
  (v) Europe / Asia
  (vi) (Regan throw in some)

Then after he answers all the questions:

 (i) We provide them matches, I think 5 will be good (algorithm can be decided after we entered all the preferences)

 (ii) If nothing they want -- use the "Quick Match" or "I Want to do something" function (extra fees)--> we match with a person online to chat and schedule (but can only use it once / twice every day to limit the abuse, prevent it to become tinder), once scheduled, he will have to wait until the schedule time to be passed before resume the using or we will start charging money if the person is using it frequently.

 (iii) For the 5 matched, he/she can start to chat (by scheduling a date!) or say not interested then we resume the match/close the line, only if not interested that we replace the next one

 (iv) After chat, he/she can evaluate the partner by saying that he/she is "something" / "not interested" and provide the option next date with him/her or end. If end we replace with a new contact!

Lets think of the algorithm once you are done with the list.

Tasks/Logistics now:

1. Explore Server Programming (javascript, python, ruby, what language we are using)
2. Swift IOS front end programming
3. Parse implementation (should be relatively easy)

Let me know!
